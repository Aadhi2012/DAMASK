!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module postprocessingMath ! in 
    interface  ! in :postprocessingMath
        subroutine mesh(res_x,res_y,res_z,geomdim,defgrad_av,centroids,nodes) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y
            integer intent(in) :: res_z
            real*8 dimension(3),intent(in) :: geomdim
            real*8 dimension(3,3),intent(in) :: defgrad_av
            real*8 dimension(res_x,res_y,res_z,3),intent(in),depend(res_x,res_y,res_z) :: centroids
            real*8 dimension(res_x + 2,res_y + 2,res_z +2 ,3),depend(res_x,res_y,res_z) :: centroids
            real*8 dimension(res_x + 1,res_y + 1,res_z + 1,3),intent(out),depend(res_x,res_y,res_z) :: nodes
        end subroutine mesh
        subroutine deformed(res_x,res_y,res_z,geomdim,defgrad,defgrad_av,coord_avgCorner) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y
            integer intent(in) :: res_z
            real*8 dimension(3),intent(in) :: geomdim
            real*8 dimension(3,3),intent(in) :: defgrad_av
            real*8 dimension(res_x,res_y,res_z,3),intent(out),depend(res_x,res_y,res_z) :: coord_avgCorner
            real*8 dimension(8,6,res_x,res_y,res_z,3),depend(res_x,res_y,res_z) :: coord
            real*8 dimension(8,res_x,res_y,res_z,3),depend(res_x,res_y,res_z) :: coord_avgOrder
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: defgrad
        end subroutine deformed
        subroutine deformed_fft(res_x,res_y,res_z,geomdim,defgrad,defgrad_av,scaling,coords) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y
            integer intent(in) :: res_z
            real*8 intent(in) :: scaling
            real*8 dimension(3),intent(in) :: geomdim
            real*8 dimension(3,3),intent(in) :: defgrad_av
            real*8 dimension(res_x,res_y,res_z,3),intent(out),depend(res_x,res_y,res_z) :: coords
            complex*16 dimension(res_x/2+1,res_y,res_z,3),depend(res_x,res_y,res_z) :: coords_fft
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: defgrad
            complex*16 dimension(res_x,res_y,res_z,3,3),depend(res_x,res_y,res_z) :: defgrad_fft
            real*8 dimension(res_x/2+1,res_y,res_z,3),depend(res_x,res_y,res_z) :: waves
        end subroutine deformed_fft
        subroutine tensor_avg(res_x,res_y,res_z,tensor,avg) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y
            integer intent(in) :: res_z
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: tensor
            real*8 dimension(3,3),intent(out) :: avg
        end subroutine tensor_avg
        subroutine logstrain_mat(res_x,res_y,res_z,defgrad,logstrain_field) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y
            integer intent(in) :: res_z
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: defgrad
            real*8 dimension(res_x,res_y,res_z,3,3),intent(out),depend(res_x,res_y,res_z) :: logstrain_field            
        end subroutine logstrain_mat
        subroutine logstrain_spat(res_x,res_y,res_z,defgrad,logstrain_field) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y
            integer intent(in) :: res_z
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: defgrad
            real*8 dimension(res_x,res_y,res_z,3,3),intent(out),depend(res_x,res_y,res_z) :: logstrain_field            
        end subroutine logstrain_spat
        subroutine calculate_cauchy(res_x,res_y,res_z,defgrad,p_stress,c_stress) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y 
            integer intent(in) :: res_z 
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: defgrad
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: p_stress
            real*8 dimension(res_x,res_y,res_z,3,3),intent(out),depend(res_x,res_y,res_z) :: c_stress  
        end subroutine calculate_cauchy
        subroutine calculate_mises(res_x,res_y,res_z,tensor,vm) ! in :postprocessingMath:postprocessingMath.f90
            integer intent(in) :: res_x
            integer intent(in) :: res_y
            integer intent(in) :: res_z
            real*8 dimension(res_x,res_y,res_z,3,3),intent(in),depend(res_x,res_y,res_z) :: tensor
            real*8 dimension(res_x,res_y,res_z,1),intent(out),depend(res_x,res_y,res_z) :: vm
        end subroutine calculate_mises
    end interface 
end python module postprocessingMath

! This file was auto-generated with f2py (version:2_5972).
! See http://cens.ioc.ee/projects/f2py2e/
! modified by m.diehl
